import os.path
import numpy as np

lpmax=10
bpmax=10
imx=500

previously_enumerated=[]
previously_branched=[]
br=1
nmx=5
ds=1E-3

checkbp=['LP0','UZ0','TR0','BP0']
start=run('janus_rel',c='forward',dat='cycle.dat',DS=ds,SP=checkbp,NMX=nmx)
sv(start,'start_%i'%br)
branches=[start]

while br<=len(branches):
    print('Branch: '+str(br))
    start=branches[br-1]
    print(start)

    i=1
    nlps=0
    stop=False

    if os.path.exists('d.fw'+str(br)+'_'+str(i)):
        print('fw', br, i)
        forward=bd('fw'+str(br)+'_'+str(i))
        print(forward)
    else:
        checkbp=['LP0','UZ0','TR0','BP0']
        nmx=5
        forward=run(start,ISW=1,NMX=nmx,DS=ds/10,SP=checkbp)

    checkbp=['LP1','UZ1','TR1','BP0']
    nmx=100

    if np.max(np.abs(forward['lambda1'])) < 1e-3:
        print('Turning off BP for branch')
        checkbp=['LP0','UZ0','TR0','BP0']

    for n in forward().getLabels():
        for prev in previously_enumerated:
            if forward(n)['TY'] not in ['EP']:
                diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff)<1e-4:
                    print('previously enumerated')
                    stop=True
        if forward(n)['TY'] not in ['EP']:
            previously_enumerated=previously_enumerated+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]

        addbr=True
        for prev in previously_branched:
            if forward(n)['TY'] in ['UZ']:
                diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff)<1e-4:
                    print('previously branched')
                    addbr=False
        if forward(n)['TY'] == 'UZ':
            if np.abs(forward(n)['lambda3'])<1E-1:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=5
                    newstart=run(forward(n),ISW=-1,DS=ds,NMX=nmx,SP=checkbp)
                    if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                        newstart=run(forward(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                    sv(newstart,'start_%i'%(len(branches)+1))
                    branches=branches+[newstart]
            else:
                print('Bad UZ; turning off BP for branch')
                checkbp=['LP0','UZ0','TR0','BP0']
                nmx=3

        if forward(n)['TY'] == 'LP':
            if np.abs(forward(n)['lambda2'])<1E-2:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=5
                    newstart=run(forward(n),ISW=-1,DS=ds,NMX=nmx,SP=checkbp)
                    if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                        newstart=run(forward(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                    sv(newstart,'start_%i'%(len(branches)+1))
                    branches=branches+[newstart]



    nlps=nlps+len(forward('LP'))
    sv(forward,'fw'+str(br)+'_'+str(i))
    cl()
    initial=forward(forward.getLabels()[0])
    dat=[initial['t']]
    dat=dat+[initial['U(%i)'%(i)] for i in range(1,initial['NDIM']+1)]
    np.save('fwinitial%i.dat'%(br),dat)

    period=forward(forward.getLabels()[-1])['PERIOD']
    NTST=np.max([1000,int(period/140*500)])
    if period>1499:
        print('Period large')
        stop=True

    while nlps<lpmax and i<imx and not forward(forward.getLabels()[-1])['TY'] in ['MX'] and not stop:
        i=i+1
        print(i,'continue:', forward(forward.getLabels()[-1])['TY'], 'lps:', nlps, 'ntst:', NTST, 'period:', period, 'checkbp:', checkbp)
        if os.path.exists('d.fw'+str(br)+'_'+str(i)):
            print('fw', br, i)
            forward=bd('fw'+str(br)+'_'+str(i))
            print(forward)
        else:
            forward=run(forward(forward.getLabels()[-1]),DS=ds,SP=checkbp,NTST=NTST,NMX=nmx)

        checkbp=['LP1','UZ1','TR1','BP0']
        if np.max(np.abs(forward['lambda1'])) < 1e-3:
            print('Turning off BP for branch')
            checkbp=['LP0','UZ0','TR0','BP0']

        period=forward(forward.getLabels()[-1])['PERIOD']
        NTST=np.max([1000,int(period/140*500)])
        nmx=100
        if period>1499:
            print('Period large')
            stop=True

        for n in forward().getLabels():
            for prev in previously_enumerated:
                if forward(n)['TY'] not in ['EP']:
                    diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]

                    if np.linalg.norm(diff)<1e-4:
                        print('previously enumerated')
                        stop=True

            if forward(n)['TY'] not in in ['EP']:
                previously_enumerated=previously_enumerated+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]

            addbr=True

            for prev in previously_branched:
                if forward(n)['TY'] in ['UZ']:
                    diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff)<1e-4:
                        print('previously branched')
                        addbr=False
            if forward(n)['TY'] == 'UZ':
                if np.abs(forward(n)['lambda3'])<1E-1:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=5
                        newstart=run(forward(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                        if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                            newstart=run(forward(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                        sv(newstart,'start_%i'%(len(branches)+1))
                        branches=branches+[newstart]
                else:
                    print('Bad UZ; turning off BP for branch')
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=3

            if forward(n)['TY'] == 'LP':
                if np.abs(forward(n)['lambda2'])<1E-2:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=5
                        newstart=run(forward(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                        if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                            newstart=run(forward(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                        sv(newstart,'start_%i'%(len(branches)+1))
                        branches=branches+[newstart]

        nlps=nlps+len(forward('LP'))
        sv(forward,'fw'+str(br)+'_'+str(i))

    nfw=i
    final=forward(forward.getLabels()[-1])
    dat=[final['t']]
    dat=dat+[final['U(%i)'%(i)] for i in range(1,final['NDIM']+1)]
    np.save('fw%ifinal.dat'%(br),dat)
    cl()

    i=1
    nlps=0
    stop=False

    if os.path.exists('d.rv'+str(br)+'_'+str(i)):
        print(i)
        reverse=bd('rv'+str(br)+'_'+str(i))
        print(reverse)
    else:
        checkbp=['LP0','UZ0','TR0','BP0']
        nmx=5
        reverse=run(start,ISW=1,NMX=nmx,DS=-ds/10,SP=checkbp)

    checkbp=['LP1','UZ1','TR1','BP0']
    nmx=100

    if np.max(np.abs(reverse['lambda1'])) < 1e-3:
        print('Turning off BP for branch')
        checkbp=['LP0','UZ0','TR0','BP0']

    for n in reverse().getLabels():
        for prev in previously_enumerated:
            if reverse(n)['TY'] not in ['EP']:
                diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff)<1e-4:
                    print('previously enumerated')
                    stop=True
        if reverse(n)['TY'] not in ['EP']:
            previously_enumerated=previously_enumerated+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]

        addbr=True
        for prev in previously_branched:
            if reverse(n)['TY'] in ['UZ']:
                diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff)<1e-4:
                    print('previously branched')
                    addbr=False
        if reverse(n)['TY'] == 'UZ':
            if  np.abs(reverse(n)['lambda3'])<1E-1:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=5
                    newstart=run(reverse(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                    if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                        newstart=run(reverse(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                    sv(newstart,'start_%i'%(len(branches)+1))
                    branches=branches+[newstart]
            else:
                print('Bad UZ; turning off BP for branch')
                checkbp=['LP0','UZ0','TR0','BP0']
                nmx=3

        if reverse(n)['TY'] == 'LP':
            if  np.abs(reverse(n)['lambda2'])<1E-2:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=5
                    newstart=run(reverse(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                    if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                        newstart=run(reverse(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                    sv(newstart,'start_%i'%(len(branches)+1))
                    branches=branches+[newstart]


    nlps=nlps+len(reverse('LP'))
    sv(reverse,'rv'+str(br)+'_'+str(i))
    initial=reverse(reverse.getLabels()[0])
    dat=[initial['t']]
    dat=dat+[initial['U(%i)'%(i)] for i in range(1,initial['NDIM']+1)]
    np.save('rvinitial%i.dat'%(br),dat)

    period=reverse(reverse.getLabels()[-1])['PERIOD']
    NTST=np.max([1000,int(period/140*500)])
    if period>1499:
        print('Period large')
        stop=True

    while nlps<lpmax and i<imx and not reverse(reverse.getLabels()[-1])['TY'] in ['MX'] and not stop:
        i=i+1
        print(i,'continue:', reverse(reverse.getLabels()[-1])['TY'], 'lps:', nlps, 'ntst:', NTST, 'period:', period, 'checkbp:', checkbp)
        if os.path.exists('d.rv'+str(br)+'_'+str(i)):
            print(i)
            reverse=bd('rv'+str(br)+'_'+str(i))
            print(reverse)
        else:
            reverse=run(reverse(reverse.getLabels()[-1]),NMX=nmx,DS=-ds,SP=checkbp, NTST=NTST)

        checkbp=['LP1','UZ1','TR1','BP0']
        if np.max(np.abs(reverse['lambda1'])) < 1e-3:
            print('Turning off BP for branch')
            checkbp=['LP0','UZ0','TR0','BP0']


        period=reverse(reverse.getLabels()[-1])['PERIOD']
        NTST=np.max([1000,int(period/140*500)])
        nmx=100
        if period>=1499:
            print('Period large')
            stop=True

        for n in reverse().getLabels():
            for prev in previously_enumerated:
                if reverse(n)['TY'] not in ['EP']:
                    diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff)<1e-4:
                        print('previously enumerated')
                        stop=True
            if reverse(n)['TY'] not in ['EP']:
                previously_enumerated=previously_enumerated+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]

            addbr=True
            for prev in previously_branched:
                if not reverse(n)['TY'] in ['UZ']:
                    diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff)<1e-4:
                        print('previously branched')
                        addbr=False
            if reverse(n)['TY'] == 'UZ':
                if np.abs(reverse(n)['lambda3'])<1E-1:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=5
                        newstart=run(reverse(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                        if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                            newstart=run(reverse(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                        sv(newstart,'start_%i'%(len(branches)+1))
                        branches=branches+[newstart]
                else:
                    print('Bad UZ; turning off BP for branch')
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=3

            if reverse(n)['TY'] == 'LP':
                if np.abs(reverse(n)['lambda2'])<1E-2:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=5
                        newstart=run(reverse(n),ISW=-1,NMX=nmx,DS=ds,SP=checkbp)
                        if newstart(newstart.getLabels()[-1])['TY'] in ['MX']:
                            newstart=run(reverse(n),ISW=-1,DS=-ds,NMX=nmx,SP=checkbp)
                        sv(newstart,'start_%i'%(len(branches)+1))
                        branches=branches+[newstart]


        nlps=nlps+len(reverse('LP'))
        sv(reverse,'rv'+str(br)+'_'+str(i))

    nrv=i
    final=reverse(reverse.getLabels()[-1])
    dat=[final['t']]
    dat=dat+[final['U(%i)'%(i)] for i in range(1,final['NDIM']+1)]
    np.save('rv%ifinal.dat'%(br),dat)

    cl()

    total=bd('rv'+str(br)+'_1')
    for j in range(2,nrv+1,1):
        total=total+bd('rv'+str(br)+'_'+str(j))
    total.writeRawFilename('rv%i.dat'%(br))

    total=bd('fw'+str(br)+'_1')
    for j in range(2,nfw+1,1):
        total=total+bd('fw'+str(br)+'_'+str(j))
    total.writeRawFilename('fw%i.dat'%(br))

    total=np.concatenate([np.flip(np.loadtxt('rv%i.dat'%(br)),axis=0),np.loadtxt('fw%i.dat'%(br))],axis=0)
    np.savetxt('total%i.dat'%(br),total)

    br=br+1
