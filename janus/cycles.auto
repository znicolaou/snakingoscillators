import os.path
import numpy as np

lpmax=10
bpmax=10
imx=500

previously_enumerated=[]
previously_branched=[]
br=1
ds=1E-3

checkbp=['LP0','UZ0','TR0','BP0']
thu=dict([[2*n,0] for n in range(1,32)])
nmx=2
startfw=run('janus_rel',c='forward',dat='cycle.dat',DS=10*ds,SP=checkbp,NMX=nmx,THU=thu)
sv(startfw,'start_fw%i'%br)
startrv=run('janus_rel',c='forward',dat='cycle.dat',DS=-10*ds,SP=checkbp,NMX=nmx,THU=thu)
sv(startrv,'start_rv%i'%br)
branches=[[startfw,startrv]]

while br<=len(branches):
    print('Branch: '+str(br))
    startfw=branches[br-1][0]
    startrv=branches[br-1][1]
    print(startfw)

    i=1
    nlps=0
    stop=False

    if os.path.exists('d.fw'+str(br)+'_'+str(i)):
        print('fw', br, i)
        forward=bd('fw'+str(br)+'_'+str(i))
        print(forward)
    else:
        checkbp=['LP1','UZ1','TR1','BP0']
        nmx=100
        forward=startfw+run(startfw,ISW=1,NMX=nmx,DS=ds,SP=checkbp)

    checkbp=['LP1','UZ1','TR1','BP0']
    nmx=100

    if np.max(np.abs(forward['lambda1'])) < 1e-3:
        print('Turning off BP for branch')
        checkbp=['LP0','UZ0','TR0','BP0']

    for n in forward().getLabels():
        for prev in previously_enumerated:
            if forward(n)['TY'] not in ['EP']:
                diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                    print('previously enumerated')
                    stop=True
        if forward(n)['TY'] not in ['EP']:
            previously_enumerated=previously_enumerated+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]

        addbr=True
        for prev in previously_branched:
            if forward(n)['TY'] in ['UZ']:
                diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                    print('previously branched')
                    addbr=False
        if forward(n)['TY'] == 'UZ':
            if np.abs(forward(n)['lambda3'])<1E-1:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=2
                    newstartfw=run(forward(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartfw,'start_fw%i'%(len(branches)+1))
                    newstartrv=run(forward(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartrv,'start_rv%i'%(len(branches)+1))
                    branches=branches+[[newstartfw,newstartrv]]
                    nmx=100
            else:
                print('Bad UZ; turning off BP for branch')
                checkbp=['LP0','UZ0','TR0','BP0']
                nmx=3

        if forward(n)['TY'] == 'LP':
            if np.abs(forward(n)['lambda2'])<1E-2:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=2
                    newstartfw=run(forward(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartfw,'start_fw%i'%(len(branches)+1))
                    newstartrv=run(forward(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartrv,'start_rv%i'%(len(branches)+1))
                    branches=branches+[[newstartfw,newstartrv]]
                    nmx=100



    nlps=nlps+len(forward('LP'))
    sv(forward,'fw'+str(br)+'_'+str(i))
    cl()

    period=forward[0][-1]['PERIOD']
    NTST=np.max([1000,int(period/140*500)])
    if period>1499:
        print('Period large')
        stop=True

    while nlps<lpmax and i<imx and not forward[0][-1]['TY'] in ['MX'] and not stop:
        i=i+1
        print(i,'continue:', forward[0][-1]['TY'], 'lps:', nlps, 'ntst:', NTST, 'period:', period, 'checkbp:', checkbp)
        if os.path.exists('d.fw'+str(br)+'_'+str(i)):
            print('fw', br, i)
            forward=bd('fw'+str(br)+'_'+str(i))
            print(forward)
        else:
            if len(forward.getLabels())==0:
                stop=True
                continue
            forward=run(forward(forward.getLabels()[-1]),DS=ds,SP=checkbp,NTST=NTST,NMX=nmx)

        checkbp=['LP1','UZ1','TR1','BP0']
        if np.max(np.abs(forward['lambda1'])) < 1e-3:
            print('Turning off BP for branch')
            checkbp=['LP0','UZ0','TR0','BP0']

        period=forward[0][-1]['PERIOD']
        NTST=np.max([1000,int(period/140*500)])
        nmx=100
        if period>1499:
            print('Period large')
            stop=True

        for n in forward().getLabels():
            for prev in previously_enumerated:
                if forward(n)['TY'] not in ['EP']:
                    diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                        print('previously enumerated')
                        stop=True

            if forward(n)['TY'] not in ['EP']:
                previously_enumerated=previously_enumerated+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]

            addbr=True

            for prev in previously_branched:
                if forward(n)['TY'] in ['UZ']:
                    diff=[[forward(n)['sigma']-prev[0],forward(n)['r']-prev[1],forward(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                        print('previously branched')
                        addbr=False
            if forward(n)['TY'] == 'UZ':
                if np.abs(forward(n)['lambda3'])<1E-1:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=2
                        newstartfw=run(forward(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartfw,'start_fw%i'%(len(branches)+1))
                        newstartrv=run(forward(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartrv,'start_rv%i'%(len(branches)+1))
                        branches=branches+[[newstartfw,newstartrv]]
                        nmx=100
                else:
                    print('Bad UZ; turning off BP for branch')
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=3

            if forward(n)['TY'] == 'LP':
                if np.abs(forward(n)['lambda2'])<1E-2:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[forward(n)['sigma'],forward(n)['r'],forward(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=2
                        newstartfw=run(forward(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartfw,'start_fw%i'%(len(branches)+1))
                        newstartrv=run(forward(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartrv,'start_rv%i'%(len(branches)+1))
                        branches=branches+[[newstartfw,newstartrv]]
                        nmx=100

        nlps=nlps+len(forward('LP'))
        sv(forward,'fw'+str(br)+'_'+str(i))

    nfw=i
    try:
        final=forward(forward.getLabels()[-1])
        dat=[final['t']]
        dat=dat+[final['U(%i)'%(i)] for i in range(1,final['NDIM']+1)]
        np.save('fw%ifinal.dat'%(br),dat)
    except:
        pass
    cl()

    i=1
    nlps=0
    stop=False
    print(startrv)

    if os.path.exists('d.rv'+str(br)+'_'+str(i)):
        print(i)
        reverse=bd('rv'+str(br)+'_'+str(i))
        print(reverse)
    else:
        checkbp=['LP1','UZ1','TR1','BP0']
        nmx=100
        reverse=startrv+run(startrv,ISW=1,NMX=nmx,DS=-ds,SP=checkbp)

    checkbp=['LP1','UZ1','TR1','BP0']
    nmx=100

    if np.max(np.abs(reverse['lambda1'])) < 1e-3:
        print('Turning off BP for branch')
        checkbp=['LP0','UZ0','TR0','BP0']

    for n in reverse().getLabels():
        for prev in previously_enumerated:
            if reverse(n)['TY'] not in ['EP']:
                diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                    print('previously enumerated')
                    stop=True
        if reverse(n)['TY'] not in ['EP']:
            previously_enumerated=previously_enumerated+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]

        addbr=True
        for prev in previously_branched:
            if reverse(n)['TY'] in ['UZ']:
                diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                    print('previously branched')
                    addbr=False
        if reverse(n)['TY'] == 'UZ':
            if  np.abs(reverse(n)['lambda3'])<1E-1:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=2
                    newstartfw=run(reverse(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartfw,'start_fw%i'%(len(branches)+1))
                    newstartrv=run(reverse(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartrv,'start_rv%i'%(len(branches)+1))
                    branches=branches+[[newstartfw,newstartrv]]
                    nmx=100
            else:
                print('Bad UZ; turning off BP for branch')
                checkbp=['LP0','UZ0','TR0','BP0']
                nmx=3

        if reverse(n)['TY'] == 'LP':
            if  np.abs(reverse(n)['lambda2'])<1E-2:
                if len(branches)<bpmax and addbr:
                    print('adding bp to branches')
                    previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=2
                    newstartfw=run(reverse(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartfw,'start_fw%i'%(len(branches)+1))
                    newstartrv=run(reverse(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                    sv(newstartrv,'start_rv%i'%(len(branches)+1))
                    branches=branches+[[newstartfw,newstartrv]]
                    nmx=100


    nlps=nlps+len(reverse('LP'))
    sv(reverse,'rv'+str(br)+'_'+str(i))

    period=reverse[0][-1]['PERIOD']
    NTST=np.max([1000,int(period/140*500)])
    if period>1499:
        print('Period large')
        stop=True

    while nlps<lpmax and i<imx and not reverse[0][-1]['TY'] in ['MX'] and not stop:
        i=i+1
        print(i,'continue:', reverse[0][-1]['TY'], 'lps:', nlps, 'ntst:', NTST, 'period:', period, 'checkbp:', checkbp)
        if os.path.exists('d.rv'+str(br)+'_'+str(i)):
            print(i)
            reverse=bd('rv'+str(br)+'_'+str(i))
            print(reverse)
        else:
            if len(reverse.getLabels())==0:
                stop=True
                continue
            reverse=run(reverse(reverse.getLabels()[-1]),NMX=nmx,DS=-ds,SP=checkbp, NTST=NTST)

        checkbp=['LP1','UZ1','TR1','BP0']
        if np.max(np.abs(reverse['lambda1'])) < 1e-3:
            print('Turning off BP for branch')
            checkbp=['LP0','UZ0','TR0','BP0']


        period=reverse[0][-1]['PERIOD']
        NTST=np.max([1000,int(period/140*500)])
        nmx=100
        if period>=1499:
            print('Period large')
            stop=True

        for n in reverse().getLabels():
            for prev in previously_enumerated:
                if reverse(n)['TY'] not in ['EP']:
                    diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                        print('previously enumerated')
                        stop=True
            if reverse(n)['TY'] not in ['EP']:
                previously_enumerated=previously_enumerated+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]

            addbr=True
            for prev in previously_branched:
                if not reverse(n)['TY'] in ['UZ']:
                    diff=[[reverse(n)['sigma']-prev[0],reverse(n)['r']-prev[1],reverse(n)['PERIOD']-prev[2]]]
                    if np.linalg.norm(diff/(1+np.abs(prev)))<1e-4:
                        print('previously branched')
                        addbr=False
            if reverse(n)['TY'] == 'UZ':
                if np.abs(reverse(n)['lambda3'])<1E-1:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=2
                        newstartfw=run(reverse(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartfw,'start_fw%i'%(len(branches)+1))
                        newstartrv=run(reverse(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartrv,'start_rv%i'%(len(branches)+1))
                        branches=branches+[[newstartfw,newstartrv]]
                        nmx=100
                else:
                    print('Bad UZ; turning off BP for branch')
                    checkbp=['LP0','UZ0','TR0','BP0']
                    nmx=3

            if reverse(n)['TY'] == 'LP':
                if np.abs(reverse(n)['lambda2'])<1E-2:
                    if len(branches)<bpmax and addbr:
                        print('adding bp to branches')
                        previously_branched=previously_branched+[[reverse(n)['sigma'],reverse(n)['r'],reverse(n)['PERIOD']]]
                        checkbp=['LP0','UZ0','TR0','BP0']
                        nmx=2
                        newstartfw=run(reverse(n),ISW=-1,DS=10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartfw,'start_fw%i'%(len(branches)+1))
                        newstartrv=run(reverse(n),ISW=-1,DS=-10*ds,NMX=nmx,SP=checkbp)
                        sv(newstartrv,'start_rv%i'%(len(branches)+1))
                        branches=branches+[[newstartfw,newstartrv]]
                        nmx=100


        nlps=nlps+len(reverse('LP'))
        sv(reverse,'rv'+str(br)+'_'+str(i))

    nrv=i
    try:
        final=reverse(reverse.getLabels()[-1])
        dat=[final['t']]
        dat=dat+[final['U(%i)'%(i)] for i in range(1,final['NDIM']+1)]
        np.save('rv%ifinal.dat'%(br),dat)
    except:
        pass

    cl()
    auto 'maketotal.auto'

    br=br+1
