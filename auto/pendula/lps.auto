import os
import timeit
os.environ["OMP_NUM_THREADS"]="8"
import numpy as np

start=timeit.default_timer()
visited=np.zeros((0,3))
if os.path.exists('visited.txt'):
    visited=np.loadtxt('visited.txt')
    if(len(visited.shape)<2):
        visited=visited.reshape((1,3))

#lps
j=1
while os.path.exists(str(j)+'.dat'):
    rv=bd(str(j)+'rv')
    fw=bd(str(j)+'fw')


    num=len(fw('LP'))
    i=1
    while i<=num:
        print("fw %i %i %i"%(j,i,num))
        lp=load(bd(str(j)+'fw'),IRS='LP'+str(i),ISW=1)
        completed=False
        for lp2 in visited:
            if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                completed=True

        if not completed:
            visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
            np.savetxt('visited.txt',visited)
            fw=run(lp)
            sv(mb(bd(str(j)+'fw')+fw),str(j)+'fw')
            cl()

        num=len(bd(str(j)+'fw')('LP'))
        i=i+1
        cl()

    num=len(rv('LP'))
    i=1
    while i<=num:
        print("rv %i %i %i"%(j,i,num))
        lp=load(bd(str(j)+'rv'),IRS='LP'+str(i),ISW=1)
        completed=False
        for lp2 in visited:
            if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                completed=True

        if not completed:
            visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
            np.savetxt('visited.txt',visited)
            rv=run(lp)
            sv(mb(bd(str(j)+'rv')+rv),str(j)+'rv')
            cl()

        num=len(bd(str(j)+'rv')('LP'))
        i=i+1
        cl()

    j=j+1

#pds
j=1
while os.path.exists('s.pd'+str(j)):
    fw=bd('pd'+str(j))
    num=len(fw('LP'))
    i=1
    while i<=num:
        print("pd %i %i %i"%(j,i,num))
        lp=load(bd('pd'+str(j)),IRS='LP'+str(i),ISW=1)
        completed=False
        for lp2 in visited:
            if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                completed=True

        if not completed:
            visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
            np.savetxt('visited.txt',visited)
            fw=run(lp)
            sv(mb(bd('pd'+str(j))+fw),'pd'+str(j))
            cl()

        num=len(bd('pd'+str(j))('LP'))
        i=i+1
        cl()
    j=j+1


#bps
all=bd('flat')
j=1
while os.path.exists(str(j)+'.dat'):
    all=all+bd(str(j)+'fw')+bd(str(j)+'rv')
    j=j+1

j=1
while os.path.exists('s.pd'+str(j)):
    all=all+bd('pd'+str(j))
    j=j+1

sv(all,'all')
numbp=len(all('BP'))

k=1
completed=False
while not completed:
    print(completed)
    j=1
    while j<numbp:
        completed=False
        bp=load(bd('all'),e='pendula',c='cont',IRS='BP'+str(j))
        for lp2 in visited:
            if np.linalg.norm(lp2-np.array([bp['amp'],bp['norm1'],bp['norm2']]))<1e-4:
                print("Previously visited bp %i %f %f" %(j, bp['amp'], np.linalg.norm(lp2-np.array([bp['amp'],bp['norm1'],bp['norm2']]))))
                completed=True

        if not completed:
            print("bp %i %i"%(j,numbp))

            visited=np.concatenate([visited,np.array([[bp['amp'],bp['norm1'],bp['norm2']]])])
            np.savetxt('visited.txt',visited)

            if(bp["switch"]<1):
                cl()
                fw=bd([])
                rv=bd([])
            else:
                fw=run(bp,ISW=-1)
                rv=run(bp,DS='-',ISW=-1)

            sv(fw,'bp'+str(k)+'fw')
            sv(rv,'bp'+str(k)+'rv')

            cfw=run(bp,ISW=1)
            crv=run(bp,DS='-',ISW=1)
            sv(cfw,'bp'+str(k)+'cfw')
            sv(crv,'bp'+str(k)+'crv')


            num=len(fw('LP'))
            i=1
            while i<=num:
                print("bp fw %i %i %i"%(j,i,num))
                lp=load(bd('bp'+str(k)+'fw'),IRS='LP'+str(i),ISW=1)
                completed=False
                for lp2 in visited:
                    if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                        print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                        completed=True

                if not completed:
                    fw=run(lp)
                    sv(mb(bd('bp'+str(k)+'fw')+fw),'bp'+str(k)+'fw')
                    cl()

                num=len(bd('bp'+str(k)+'fw')('LP'))
                i=i+1

            num=len(rv('LP'))
            i=1
            while i<=num:
                print("bp rv %i %i %i"%(j,i,num))
                lp=load(bd('bp'+str(k)+'rv'),IRS='LP'+str(i),ISW=1)
                completed=False
                for lp2 in visited:
                    if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                        print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                        completed=True

                if not completed:
                    visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
                    np.savetxt('visited.txt',visited)
                    rv=run(lp)
                    sv(mb(bd('bp'+str(k)+'rv')+rv),'bp'+str(k)+'rv')
                    cl()

                num=len(bd('bp'+str(k)+'rv')('LP'))
                i=i+1

            num=len(cfw('LP'))
            i=1
            while i<=num:
                print("bp cfw %i %i %i"%(j,i,num))
                lp=load(bd('bp'+str(k)+'cfw'),IRS='LP'+str(i),ISW=1)
                completed=False
                for lp2 in visited:
                    if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                        print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                        completed=True

                if not completed:
                    visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
                    np.savetxt('visited.txt',visited)
                    fw=run(lp)
                    sv(mb(bd('bp'+str(k)+'cfw')+fw),'bp'+str(k)+'cfw')
                    cl()

                num=len(bd('bp'+str(k)+'cfw')('LP'))
                i=i+1

            num=len(crv('LP'))
            i=1
            while i<=num:
                print("bp cfw %i %i %i"%(j,i,num))
                lp=load(bd('bp'+str(k)+'crv'),IRS='LP'+str(i),ISW=1)
                completed=False
                for lp2 in visited:
                    if np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))<1e-4:
                        print("Previously visited %i %f" %(i, np.linalg.norm(lp2-np.array([lp['amp'],lp['norm1'],lp['norm2']]))))
                        completed=True

                if not completed:
                    visited=np.concatenate([visited,np.array([[lp['amp'],lp['norm1'],lp['norm2']]])])
                    np.savetxt('visited.txt',visited)
                    rv=run(lp)
                    sv(mb(bd('bp'+str(k)+'crv')+rv),'bp'+str(k)+'crv')
                    cl()

                num=len(bd('bp'+str(k)+'crv')('LP'))
                i=i+1

            if(bp["switch"]>0):
                all=all+bd('bp'+str(k)+'fw')+bd('bp'+str(k)+'rv')+bd('bp'+str(k)+'cfw')+bd('bp'+str(k)+'crv')
            else:
                all=all+bd('bp'+str(k)+'cfw')+bd('bp'+str(k)+'crv')
            k=k+1

            sv(all,'all')
            all=bd('all')

        numbp=len(all('BP'))
        j=j+1


stop=timeit.default_timer()
print("Runtime %f"%(stop-start))
cl()
